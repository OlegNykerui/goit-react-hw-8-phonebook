{"version":3,"file":"static/js/479.c816b71d.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Form/Form.styled.jsx","components/Form/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Contacts/ContactItem.jsx","components/Contacts/ContactsList.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const selectLoading = state => state.contacts.loading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllContacts = state => state.contacts.items;\n","import styled from 'styled-components';\n\nimport {\n  Form as FormikForm,\n  Field as InputField,\n  ErrorMessage as ErrorMes,\n} from 'formik';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  gap: 25px;\n`;\n\nexport const Field = styled(InputField)`\n  height: 20px;\n  width: 200px;\n  border: 2px solid orange;\n  border-radius: 10px;\n  margin-left: 145px;\n`;\n\nexport const ErrorMessage = styled(ErrorMes)`\n  text-align: center;\n  color: red;\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  height: 30px;\n  margin-left: 200px;\n  background-color: #f8be5338;\n  border: 1px solid orange;\n  border-radius: 5px;\n  margin-bottom: 30px;\n`;\n\nexport const List = styled.ul`\n  margin: 30px 0 0 0;\n  list-style: none;\n  padding: 0;\n  text-align: center;\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 10px;\n  display: flex;\n  justify-content: space-evenly;\n  font-weight: 500;\n  font-style: italic;\n`;\nexport const ButtonDelete = styled.button`\n  width: 80px;\n  height: 20px;\n  background-color: #f8be5338;\n  border: 1px solid orange;\n  border-radius: 5px;\n`;\n","import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from '../../redux/contacts/operations';\nimport {\n  selectAllContacts,\n  selectLoading,\n} from '../../redux/contacts/selectors';\n\nimport { Button, Form, Field, ErrorMessage } from './Form.styled';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectAllContacts);\n  const loading = useSelector(selectLoading);\n\n  const initialValues = {\n    name: '',\n    number: '',\n  };\n\n  const validationSchema = Yup.object({\n    name: Yup.string().required(),\n    number: Yup.string().required(),\n  });\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { name, number } = values;\n\n    contacts.find(\n      contact => contact.name.toLowerCase() === values.name.toLowerCase()\n    )\n      ? toast.error(` ${values.name} is already in contacts`)\n      : dispatch(addContacts({ name, number }));\n\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={validationSchema}\n    >\n      <Form>\n        <Field type=\"text\" name=\"name\" />\n\n        <ErrorMessage name=\"name\" component=\"span\" />\n        <Field type=\"tel\" name=\"number\" />\n        <ErrorMessage name=\"number\" component=\"span\" />\n        <Button type=\"submit\">{loading ? 'Add....' : 'Add contacts'}</Button>\n        <Toaster position=\"top-right\" reverseOrder={false} />\n      </Form>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  height: 20px;\n  width: 200px;\n  border: 2px solid orange;\n  border-radius: 10px;\n  margin-left: 145px;\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateFilter } from '../../redux/contacts/contactsSlice';\nimport { Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter);\n\n  return (\n    <div>\n      <Input\n        onChange={e => dispatch(updateFilter(e.target.value))}\n        type=\"text\"\n        value={filter}\n        name=\"filter\"\n        id=\"filter\"\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContacts } from '../../redux/contacts/operations';\n\nimport { Item, ButtonDelete } from '../Form/Form.styled';\n\nconst ContactItem = ({ id, name, number }) => {\n  const { error } = useSelector(state => state.contacts);\n  const dispatch = useDispatch();\n  return (\n    <>\n      {error && <h2>Can't delete task. Server error.</h2>}\n      <Item>\n        {`${name} : tel - ${number}`}\n\n        <ButtonDelete\n          onClick={() => dispatch(deleteContacts(id))}\n          type=\"button\"\n        >\n          {/* {isLoading ? 'Deleting...' : 'Delete'} */} Видалити\n        </ButtonDelete>\n      </Item>\n    </>\n  );\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport ContactItem from './ContactItem';\nimport {\n  selectFilter,\n  selectAllContacts,\n} from '../../redux/contacts/selectors';\n\nimport { List } from '../Form/Form.styled';\n\nexport const ContactsList = () => {\n  const filter = useSelector(selectFilter);\n  const contacts = useSelector(selectAllContacts);\n  const normalizedFilter = filter.toLowerCase();\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return (\n    <>\n      <List>\n        {visibleContacts.map(({ id, name, number }) => {\n          return (\n            <ContactItem\n              key={id}\n              id={id}\n              name={name}\n              number={number}\n            ></ContactItem>\n          );\n        })}\n      </List>\n\n      {/* <h2>No contacts yet</h2> */}\n    </>\n  );\n};\n","import React from 'react';\nimport { ContactForm } from '../../components/Form/ContactForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactsList } from '../../components/Contacts/ContactsList';\n\nconst ContactsPage = () => {\n  return (\n    <div\n      style={{\n        width: '500px',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        marginTop: '50px',\n        border: '1px dashed orange',\n        backgroundColor: '#fffcf9',\n      }}\n    >\n      <h1 style={{ textAlign: 'center' }}>PhoneBook</h1>\n\n      <ContactForm />\n\n      <h2 style={{ textAlign: 'center' }}>Contacts</h2>\n\n      <Filter />\n      <ContactsList />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectLoading","state","contacts","loading","selectFilter","filter","selectAllContacts","items","Form","styled","FormikForm","Field","InputField","ErrorMessage","ErrorMes","Button","List","Item","ButtonDelete","ContactForm","dispatch","useDispatch","useSelector","validationSchema","Yup","name","required","number","initialValues","onSubmit","values","resetForm","find","contact","toLowerCase","toast","addContacts","type","component","position","reverseOrder","Input","Filter","onChange","e","updateFilter","target","value","id","error","onClick","deleteContacts","ContactsList","normalizedFilter","visibleContacts","includes","map","style","width","marginLeft","marginRight","marginTop","border","backgroundColor","textAlign"],"sourceRoot":""}